{"version":3,"sources":["main.js"],"names":["myGeoJSONPath","geojsonLayer","highlightFeature","e","layer","target","setStyle","dashArray","fillColor","fillOpacity","L","Browser","ie","opera","bringToFront","countryName","feature","properties","name","$","css","text","resetHighlight","resetStyle","countryClick","code","iso_a2","toLowerCase","url","window","location","onEachFeature","inArray","country_codes","on","mouseover","mouseout","click","_leaflet_id","id","conditionalStyle","stroke","color","weight","opacity","fill","className","getJSON","data","console","log","map","center","maxBounds","scrollWheelZoom","touchZoom","doubleClickZoom","zoomControl","dragging","boxZoom","zoom","geoJson","clickable","style","addTo"],"mappings":"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","file":"main.js","sourcesContent":["// Europe Map in Homepage\nvar myGeoJSONPath = '../data/europe.geo.json';\nvar geojsonLayer;\n\n// Interaction logic from https://jsfiddle.net/eaj6h/11/\nfunction highlightFeature(e) {\n  var layer = e.target;\n\n  layer.setStyle({\n    dashArray: '',\n    fillColor: '#4f58ff',\n    fillOpacity: 1\n  });\n\n  if (!L.Browser.ie && !L.Browser.opera) {\n    layer.bringToFront();\n  }\n  \n  // show country name label\n  var countryName = e.target.feature.properties.name;\n  $( '#country-name' ).css('display', 'block');\n  $( '#country-name div' ).text(countryName);\n  \n}\n\nfunction resetHighlight(e) {\n  geojsonLayer.resetStyle(e.target);\n  \n  // hide country name label\n  $( '#country-name' ).css('display', 'none');\n}\n\nfunction countryClick(e) {\n  var code = e.target.feature.properties.iso_a2.toLowerCase();\n  var url = '/en/country/' + code;\n  window.location = url;\n}\n\nfunction onEachFeature(feature, layer) {\n  if ($.inArray(feature.properties.iso_a2, country_codes) != -1) {\n    layer.on({\n      mouseover: highlightFeature,\n      mouseout: resetHighlight,\n      click: countryClick\n    });\n  }\n  // make features accessible by id\n  // https://stackoverflow.com/a/28618177\n  layer._leaflet_id = feature.id;\n}\n\n\nfunction conditionalStyle(feature) {\n    // http://gis.stackexchange.com/a/75686\n    if ($.inArray(feature.properties.iso_a2, country_codes) != -1) {\n\treturn {\n\t  stroke: true,\n\t  color:  '#ddd',\n\t  weight: 1,\n\t  opacity: 1,\n\t  fill: true,\n\t  fillColor: '#4f58ff',\n\t  fillOpacity: 0.7,\n\t  className: 'active-cursor'\n\t};\n    } else {\n\treturn {\n\t  stroke: true,\n\t  color:  '#ddd',\n\t  weight: 1,\n\t  opacity: 1,\n\t  fill: true,\n\t  fillColor: '#b4bbf3',\n\t  fillOpacity: 0.7\n\t};\n    }\n}\n\n\n\n$.getJSON(myGeoJSONPath,function(data){\n    console.log(data);\n    console.log(country_codes);\n    var map = L.map('map', {\n    center: [58.5377, 22.3958],\n    maxBounds: [[90, 180], [-90, -180]],\n    scrollWheelZoom: false,\n    touchZoom: false,\n    doubleClickZoom: false,\n    zoomControl: false,\n    dragging: false,\n    boxZoom: false,\n    zoom: 3.2,\n  });\n  \n  geojsonLayer = L.geoJson(data, {\n      clickable: true,\n      style: conditionalStyle,\n      onEachFeature: onEachFeature\n  });\n  geojsonLayer.addTo(map);\n\n\n})\n"]}